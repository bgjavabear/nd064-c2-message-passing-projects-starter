1) person_service

person_service is responsible for 2 tasks:
    1.1) Creating new users
    1.2) Retrieving users

person_service is responsible for both of them, because it is easier to implement caching mechanism.

As soon as a new person is created and inserted into the database, we refresh the cache.

We need high-speed communication channel here, because the application requires us to load all users at once into the UI.
The number of users may be huge. That's why I chose gRPC communication here.

2) location_service

We expect locations are created frequently. There can be multiple locations for one user and even at the same day.

That's why I am using kafka. Location events will be stored into kafka broker and location_service will be retrieving
data from it and store into the database.



3) connection_service
connection service is responsible for the algorithm of finding people that you may find intreresting.

I chose grpc communication because the number of people returned may be huge.

4) control_service
control_service is basically service for internal usage that allow us to publish messages to kafka, to gRPC servers, etc
It is used for debugging or demonstration purposes only.